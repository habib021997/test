apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-server
spec:
  replicas: 1
  selector:
     matchLabels:
       app: redis
       tier: backend
  template:
    metadata:
      labels:
        app: redis
        tier: backend
    spec:
      containers:
      - name: redis
        image: redis:4.0
        imagePullPolicy: "Always"
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-server
  labels:
    app: tspproject
    tier: test
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  #type: LoadBalancer
  #type:
  ports:
    # the port that this service should serve on
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    tier: backend      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fire
spec:
  replicas: 1
  selector:
     matchLabels:
       app: nf-app
       tier: frontend
  template:
    metadata:
      labels:
        app: nf-app
        tier: frontend
    spec:
      containers:
      - name: nf-app
        image: habib02/nf:1
        imagePullPolicy: "Always"
        # env:
        #   - name: MY_USER
        #     valueFrom:
        #       configMapKeyRef:
        #         name: nf-configmap
        #         key: UserName
        #   - name: MY_PASS
        #     valueFrom:
        #       configMapKeyRef:
        #         name: nf-configmap
        #         key: PassWord      
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 100Mi
        ports:
        - containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fire-2
spec:
  replicas: 1
  selector:
     matchLabels:
       app: nf-app
       tier: frontend
  template:
    metadata:
      labels:
        app: nf-app
        tier: frontend
    spec:
      containers:
      - name: nf-app
        image: habib02/nf:2
        imagePullPolicy: "Always"
        # env:
        #   - name: MY_USER
        #     valueFrom:
        #       configMapKeyRef:
        #         name: nf-configmap
        #         key: UserName
        #   - name: MY_PASS
        #     valueFrom:
        #       configMapKeyRef:
        #         name: nf-configmap
        #         key: PassWord      
        # resources:
        #   requests:
        #     cpu: 100m
        #     memory: 100Mi
        ports:
        - containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: app
  labels:
    app: nf-svc
    tier: test
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  type: LoadBalancer
  #type: NodePort
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 5000 
  selector:
    app: nf-app
    tier: frontend
